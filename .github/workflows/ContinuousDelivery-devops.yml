name: ContinuousDelivery-devops

concurrency: ContinuousDelivery-devops
on:
  push:
    branches: [DevOps]
  workflow_dispatch: 

jobs:
  cd:
    name: Deploy to Dev Environment
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-west-2
      AWS_ECR_REPO_NAME: name_of_ecr_repo

##### Setup
    steps:
    - name: Check out code 
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: 17
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{runner.os}}-m2-${{hashfile('**/pom.xml') }}
        restore-keys: ${{runner.os }}-m2

   ## Version Number
    - name: Generate version number 
      run: |
        echo "VERSION_NUMBER=1.0.${{github.run_number}}" >> $GITHUB_ENV

### Run Tests
    - name: Run tests with Maven
      run: mvn test

      
### App Container
    - name: ConfigureAWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{secrets.AWS_ECR_ACCESS_KEY_ID}}
        aws-secret-access-key-id: ${secrets.AWS_ECR_SECRET_ACCESS_KEY_ID}
        aws-region: ${{env.AWS_REGION}}

    -  name: Build and Push Docker Image
       run: |
      
          ocker build -t ${{ env.AWS_ECR_REPO_NAME }}:${{ env.VERSION_NUMBER }} .
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.AWS_ECR_REPO_NAME }}
          docker tag ${{ env.AWS_ECR_REPO_NAME }}:${{ env.VERSION_NUMBER }} ${{ env.AWS_ECR_REPO_NAME }}:latest
          docker push ${{ env.AWS_ECR_REPO_NAME }}:${{ env.VERSION_NUMBER }}
          docker push ${{ env.AWS_ECR_REPO_NAME }}:latest

    -   name: Install kubectl
        run: |
         curl -LO "https://dl.k8s.io/release/v1.26.0/bin/linux/amd64/kubectl"
         chmod +x ./kubectl
         sudo mv ./kubectl /usr/local/bin/kubectl
         kubectl version --client

    - name: Deploy to Kubernetes (EKS)
      run: |
        kubectl apply -f k8s//
    
